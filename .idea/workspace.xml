<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="66433a66-7142-40bb-8229-fe685763d41c" name="Changes" comment="Microservices">
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/RESTSecurityApp.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/StatService/src/main/java/models/Stat.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/StatService/src/main/java/repositories/DataSourceConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/StatService/src/main/java/repositories/DataSourceConfig.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/StatService/src/main/java/repositories/StatRepository.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/StatService/src/main/java/services/StatService.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/StatService/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/StatService/src/main/resources/application.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/UserService/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/UserService/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/UserService/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/UserService/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/UserService/src/main/java/com/efremov/SpringBoot/RESTSecurityApp/services/PostServiceClient.java" beforeDir="false" afterPath="$PROJECT_DIR$/UserService/src/main/java/com/efremov/SpringBoot/RESTSecurityApp/services/PostServiceClient.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/UserService/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/UserService/src/main/resources/application.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yaml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;Sharest&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/Sharest/RESTSecurityApp.git&quot;,
    &quot;accountId&quot;: &quot;8df36148-95cc-489e-9720-1a4d7c9796b3&quot;
  }
}</component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2nkwUYvxuNDX2hqmtrXP6i2McQJ" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Docker.StatService/Dockerfile.executor&quot;: &quot;Run&quot;,
    &quot;Docker.compose.yaml.PostService: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.compose.yaml.StatService: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.compose.yaml.UserService: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.compose.yaml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yaml.PostService: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yaml.StatService: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yaml.StatServiceDB: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yaml.StatServiceKafka: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yaml.UserService: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yaml.UserServiceDB: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yaml.postservice: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yaml.statservice: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yaml.userservice: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;Docker.docker-compose.yaml: Compose Deployment.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;#2 on Security&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;D:/Repos/Mentor/Security/RESTSecurityApp/UserService&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunManager" selected="Docker.docker-compose.yaml.userservice: Compose Deployment">
    <configuration name="StatService/Dockerfile" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="sourceFilePath" value="StatService/Dockerfile" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml.StatServiceKafka: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="StatServiceKafka" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml.statservice: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="statservice" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml.userservice: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="userservice" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yaml.userservice: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yaml: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yaml.StatServiceKafka: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yaml.statservice: Compose Deployment" />
        <item itemvalue="Docker.StatService/Dockerfile" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9f38398b9061-39b83d9b5494-intellij.indexing.shared.core-IU-241.18034.62" />
        <option value="bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-IU-241.18034.62" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="66433a66-7142-40bb-8229-fe685763d41c" name="Changes" comment="" />
      <created>1729530397882</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1729530397882</updated>
      <workItem from="1729530398877" duration="1409000" />
      <workItem from="1729531918882" duration="56000" />
      <workItem from="1729532020758" duration="1540000" />
      <workItem from="1729535814183" duration="157000" />
      <workItem from="1729536468574" duration="1521000" />
      <workItem from="1729538361346" duration="768000" />
      <workItem from="1729592413246" duration="69000" />
      <workItem from="1729594162145" duration="106000" />
      <workItem from="1729594552296" duration="17000" />
      <workItem from="1729594805408" duration="325000" />
      <workItem from="1729595640913" duration="609000" />
      <workItem from="1729619061796" duration="154000" />
      <workItem from="1729686256662" duration="54000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>